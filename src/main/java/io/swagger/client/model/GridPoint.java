/**
 * FH Technikum SmartCity IndoorNavigation API
 * This is an API for FH Technikum BWI16 SmartCity IndoorNavigationAPP
 *
 * OpenAPI spec version: 1.0.0
 * Contact: wi15b099@technikum-wien.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class GridPoint {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("posX")
  private Integer posX = null;
  @SerializedName("posY")
  private Integer posY = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getPosX() {
    return posX;
  }
  public void setPosX(Integer posX) {
    this.posX = posX;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Integer getPosY() {
    return posY;
  }
  public void setPosY(Integer posY) {
    this.posY = posY;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GridPoint gridPoint = (GridPoint) o;
    return (this.id == null ? gridPoint.id == null : this.id.equals(gridPoint.id)) &&
        (this.posX == null ? gridPoint.posX == null : this.posX.equals(gridPoint.posX)) &&
        (this.posY == null ? gridPoint.posY == null : this.posY.equals(gridPoint.posY));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.posX == null ? 0: this.posX.hashCode());
    result = 31 * result + (this.posY == null ? 0: this.posY.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GridPoint {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  posX: ").append(posX).append("\n");
    sb.append("  posY: ").append(posY).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
